#importing library
%matplotlib inline
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np


#importing data set
dataset=pd.read_csv('D:\Data_salary.csv')
x=dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1].values

#Splitting the data 
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test= train_test_split(x,y,test_size=0.2,random_state = 0)


#train dataset 
from sklearn.linear_model import LinearRegression 
regressor = LinearRegression()
regressor.fit(x_train,y_train)

#prediction
y_predict=regressor.predict(x_test)
print(regressor.intercept_)
print(regressor.coef_)


df = pd.DataFrame({'Actual': y_test.flatten(), 'Predicted': y_predict.flatten()})
df

#ploting graph for train
plt.scatter (x_train,y_train,color='blue')
plt.plot(x_train,regressor.predict(x_train),color='red')
plt.title('salary vs Experiance(trainingset)')
plt.xlabel('year of exp')
plt.ylabel("salary")
plt.show()

#ploting test data
plt.scatter (x_test,y_test,color='blue')
plt.plot(x_test,regressor.predict(x_test),color='red')
plt.title('salary vs Experiance(trainingset)')
plt.xlabel('year of exp')
plt.ylabel("salary")
plt.show()

#Actual vs prediction
df1 = df.head(25)
df1.plot(kind='bar',figsize=(8,3))
plt.grid(which='major', linestyle='-', linewidth='0.5', color='green')
plt.grid(which='minor', linestyle=':', linewidth='0.5', color='black')
plt.show()


import sklearn
from sklearn import metrics
print('Mean Absolute Error:', sklearn.metrics.mean_absolute_error(y_test, y_predict))  
print('Mean Squared Error:', sklearn.metrics.mean_squared_error(y_test, y_predict))  
print('Root Mean Squared Error:', np.sqrt(sklearn.metrics.mean_squared_error(y_test, y_predict)))

